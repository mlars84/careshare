myApp.controller("profileController",["$scope","$http","$location","profileService",function(a,b,c,d){const e=this;e.userProfiles=[],e.showPicker=function(){filestack.init("AJeDIunS3iZNiN6Db8FQHz").pick({}).then(function(a){console.log("returned URL: ",a.filesUploaded[0].url),e.pix={url:a.filesUploaded[0].url},console.log(e.pix.url)})},a.nameIn={imageUrl:"Profile Name"},console.log("checking user"),b.get("/user").then(function(a){a.data.username?(e.userName=a.data.username,e.userId=a.data._id,console.log("User Data: ",e.userName,e.userId),e.getUserProfiles()):c.path("/home")}),e.logout=function(){b.get("/user/logout").then(function(a){console.log("logged out",a),swal("Thanks for CareSharing!"),c.path("/home")})},e.addProfile=function(){console.log("clicked submit");var a={imageUrl:e.pix.url,name:e.nameIn,age:e.ageIn,basicInfo:e.basicInfoIn,careInfo:e.careInfoIn,emergencyContacts:e.emergencyContactsIn,userCreated:e.userId,sharedWith:[]};console.log(a),b({method:"POST",url:"/user/addProfile",data:a}).then(function(a){console.log("back from server with =>",a.data),e.clearInputs(),e.getUserProfiles(),swal("Good job!","CareProfile created! Scroll down to check it out.","success")})},e.clearInputs=function(){e.imageUrl="",e.nameIn="",e.ageIn="",e.basicInfoIn="",e.careInfoIn="",e.emergencyContactsIn=""},e.getUserProfiles=function(){console.log("getting users profiles based on their mongo _id in the profiles they created"),b({method:"GET",url:"/user/getUserProfiles"}).then(function(a){console.log("res.data =>",a.data,"vm.userId =>",e.userId),e.userProfiles=[];for(var b=0;b<a.data.length;b++)console.log(a.data[b].userCreated),a.data[b].userCreated===e.userId&&(e.userProfiles.push(a.data[b]),console.log(e.userProfiles))})},e.updateProfile=function(a){console.log("update button clicked!",a),b({method:"PUT",url:"/user/updateProfile",data:a}).then(function(b){console.log("back from server with =>",b.data),e.getUserProfiles(),swal(a.name+" has been updated!")})},e.shareProfile=function(){console.log("share button clicked!"),c.path("/careshare")},e.unShare=function(a,c){console.log("in unShare function"),console.log(a,c),swal({title:"Are you sure?",text:"This will unshare "+c.name+" with "+a.username+"!",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes, unshare!",cancelButtonText:"No, cancel plx!",closeOnConfirm:!1,closeOnCancel:!1},function(d){if(d){swal("Unshared!","No worries, you can always CareShare again if you'd like.","success");b({method:"PUT",url:"/user/unShare",data:{profileToUnshare:a,currentProfile:c}}).then(function(a){console.log(a.data),e.getUserProfiles()})}else swal("Cancelled",a.username+" still has access to "+c.name+" :)","error")})},e.deleteProfile=function(a,c,d){console.log("delete button clicked",a),swal({title:"Are you sure?",text:"You will not be able to recover "+d.name+"'s CareProfile!",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes, delete it!",closeOnConfirm:!1,closeOnCancel:!1},function(c){c?(swal("Deleted!",d.name+" has been deleted.","success"),b({method:"DELETE",url:"/user/deleteProfile",params:{id:a}}).then(function(a){console.log("back from server with =>",a),e.getUserProfiles()})):swal("Cancelled",d.name+"'s CareProfile lives on :)","error")})}}]);