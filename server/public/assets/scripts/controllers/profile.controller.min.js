myApp.controller("profileController",["$scope","$http","$location","profileService",function($scope,$http,$location,profileService){const vm=this;vm.userProfiles=[],vm.showPicker=function(){filestack.init("AJeDIunS3iZNiN6Db8FQHz").pick({}).then(function(result){console.log("returned URL: ",result.filesUploaded[0].url),vm.pix={url:result.filesUploaded[0].url},console.log(vm.pix.url)})},$scope.nameIn={imageUrl:"Profile Name"},console.log("checking user"),$http.get("/user").then(function(response){response.data.username?(vm.userName=response.data.username,vm.userId=response.data._id,console.log("User Data: ",vm.userName,vm.userId),vm.getUserProfiles()):$location.path("/home")}),vm.logout=function(){$http.get("/user/logout").then(function(res){console.log("logged out",res),swal("Thanks for CareSharing!"),$location.path("/home")})},vm.addProfile=function(){console.log("clicked submit");var profileToSend={imageUrl:vm.pix.url,name:vm.nameIn,age:vm.ageIn,basicInfo:vm.basicInfoIn,careInfo:vm.careInfoIn,emergencyContacts:vm.emergencyContactsIn,userCreated:vm.userId,sharedWith:[]};console.log(profileToSend),$http({method:"POST",url:"/user/addProfile",data:profileToSend}).then(function(res){console.log("back from server with =>",res.data),vm.clearInputs(),vm.getUserProfiles(),swal("Good job!","CareProfile created! Scroll down to check it out.","success")})},vm.clearInputs=function(){vm.imageUrl="",vm.nameIn="",vm.ageIn="",vm.basicInfoIn="",vm.careInfoIn="",vm.emergencyContactsIn=""},vm.getUserProfiles=function(){console.log("getting users profiles based on their mongo _id in the profiles they created"),$http({method:"GET",url:"/user/getUserProfiles"}).then(function(res){console.log("res.data =>",res.data,"vm.userId =>",vm.userId),vm.userProfiles=[];for(var i=0;i<res.data.length;i++)console.log(res.data[i].userCreated),res.data[i].userCreated===vm.userId&&(vm.userProfiles.push(res.data[i]),console.log(vm.userProfiles))})},vm.updateProfile=function(profile){console.log("update button clicked!",profile),$http({method:"PUT",url:"/user/updateProfile",data:profile}).then(function(res){console.log("back from server with =>",res.data),vm.getUserProfiles(),swal(profile.name+" has been updated!")})},vm.shareProfile=function(){console.log("share button clicked!"),$location.path("/careshare")},vm.unShare=function(profileToUnshare,currentProfile){console.log("in unShare function"),console.log(profileToUnshare,currentProfile),swal({title:"Are you sure?",text:"This will unshare "+currentProfile.name+" with "+profileToUnshare.username+"!",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes, unshare!",cancelButtonText:"No, cancel plx!",closeOnConfirm:!1,closeOnCancel:!1},function(isConfirm){if(isConfirm){swal("Unshared!","No worries, you can always CareShare again if you'd like.","success");$http({method:"PUT",url:"/user/unShare",data:{profileToUnshare:profileToUnshare,currentProfile:currentProfile}}).then(function(res){console.log(res.data),vm.getUserProfiles()})}else swal("Cancelled",profileToUnshare.username+" still has access to "+currentProfile.name+" :)","error")})},vm.deleteProfile=function(id,profileToUnshare,currentProfile){console.log("delete button clicked",id),swal({title:"Are you sure?",text:"You will not be able to recover "+currentProfile.name+"'s CareProfile!",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes, delete it!",closeOnConfirm:!1,closeOnCancel:!1},function(isConfirm){isConfirm?(swal("Deleted!",currentProfile.name+" has been deleted.","success"),$http({method:"DELETE",url:"/user/deleteProfile",params:{id:id}}).then(function(res){console.log("back from server with =>",res),vm.getUserProfiles()})):swal("Cancelled",currentProfile.name+"'s CareProfile lives on :)","error")})}}]);